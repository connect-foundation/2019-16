name: PR Test

on:
  pull_request:
    types: [opened, reopened, labeled]
    branches:
      #     - master
      #     - develop
      - service/*
      - app/log

jobs:
  RunTest:
    name: Run Jest
    runs-on: [ubuntu-latest]
    steps:
      - name: checkout repo
        uses: actions/checkout@master
      - name: run service test
        run: |
          echo sha is ${{github.sha}}
          echo base_ref is ${{github.base_ref}}
          echo head_ref is ${{github.head_ref}}
          echo current branch is " ${GITHUB_REF#refs/heads/} "
          if [  ${{github.base_ref}} == "service/log" ]
          then
            cd server/log
            npm install
            npm test
          elif [  ${{github.base_ref}} == "service/payment" ]
          then
            cd server/payment
            npm intall
            npm test
          else
            return 0
          fi
      #       - name: GitHub Script create issue
      #         uses: actions/github-script@0.3.0
      #         with:
      #           github-token: ${{github.token}}
      #           script: |
      #               github.issues.create({
      #               ...context.repo,
      #               title: 'Failed merge PR ${{github.sha}}',
      #               body: '테스트가 실패하였습니다. '
      #               })
      #           if: failure()
      - name: automerge
        uses: "pascalgn/automerge-action@733fcc62d711705eae9cd66fcf49c93c1d1a98c6"
        env:
          GITHUB_TOKEN: "${{ secrets.TOKEN }}"
          MERGE_LABELS: "automerge"
          MERGE_COMMIT_MESSAGE: "automatic"
        if: success()
#       - name: Slack Notification
#         uses: rtCamp/action-slack-notify@master
#         env:
#           SLACK_CHANNEL: general
#           SLACK_COLOR: '#3278BD'
#           SLACK_ICON: https://github.com/rtCamp.png?size=48
#           SLACK_MESSAGE: 'PR Merge 성공! :rocket:'
#           SLACK_TITLE: Post Title
#           SLACK_USERNAME: mergeBot
#           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
